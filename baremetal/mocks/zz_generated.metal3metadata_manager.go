// /*
// Copyright The Kubernetes Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */
//
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ./baremetal/metal3metadata_manager.go

// Package baremetal_mocks is a generated GoMock package.
package baremetal_mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMetadataManagerInterface is a mock of MetadataManagerInterface interface
type MockMetadataManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataManagerInterfaceMockRecorder
}

// MockMetadataManagerInterfaceMockRecorder is the mock recorder for MockMetadataManagerInterface
type MockMetadataManagerInterfaceMockRecorder struct {
	mock *MockMetadataManagerInterface
}

// NewMockMetadataManagerInterface creates a new mock instance
func NewMockMetadataManagerInterface(ctrl *gomock.Controller) *MockMetadataManagerInterface {
	mock := &MockMetadataManagerInterface{ctrl: ctrl}
	mock.recorder = &MockMetadataManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetadataManagerInterface) EXPECT() *MockMetadataManagerInterfaceMockRecorder {
	return m.recorder
}

// SetFinalizer mocks base method
func (m *MockMetadataManagerInterface) SetFinalizer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetFinalizer")
}

// SetFinalizer indicates an expected call of SetFinalizer
func (mr *MockMetadataManagerInterfaceMockRecorder) SetFinalizer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetFinalizer", reflect.TypeOf((*MockMetadataManagerInterface)(nil).SetFinalizer))
}

// UnsetFinalizer mocks base method
func (m *MockMetadataManagerInterface) UnsetFinalizer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UnsetFinalizer")
}

// UnsetFinalizer indicates an expected call of UnsetFinalizer
func (mr *MockMetadataManagerInterfaceMockRecorder) UnsetFinalizer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnsetFinalizer", reflect.TypeOf((*MockMetadataManagerInterface)(nil).UnsetFinalizer))
}

// RecreateStatus mocks base method
func (m *MockMetadataManagerInterface) RecreateStatus(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecreateStatus", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecreateStatus indicates an expected call of RecreateStatus
func (mr *MockMetadataManagerInterfaceMockRecorder) RecreateStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecreateStatus", reflect.TypeOf((*MockMetadataManagerInterface)(nil).RecreateStatus), arg0)
}

// DeleteSecrets mocks base method
func (m *MockMetadataManagerInterface) DeleteSecrets(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecrets", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSecrets indicates an expected call of DeleteSecrets
func (mr *MockMetadataManagerInterfaceMockRecorder) DeleteSecrets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecrets", reflect.TypeOf((*MockMetadataManagerInterface)(nil).DeleteSecrets), arg0)
}

// CreateSecrets mocks base method
func (m *MockMetadataManagerInterface) CreateSecrets(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSecrets", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSecrets indicates an expected call of CreateSecrets
func (mr *MockMetadataManagerInterfaceMockRecorder) CreateSecrets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSecrets", reflect.TypeOf((*MockMetadataManagerInterface)(nil).CreateSecrets), arg0)
}

// DeleteReady mocks base method
func (m *MockMetadataManagerInterface) DeleteReady() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteReady")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteReady indicates an expected call of DeleteReady
func (mr *MockMetadataManagerInterfaceMockRecorder) DeleteReady() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteReady", reflect.TypeOf((*MockMetadataManagerInterface)(nil).DeleteReady))
}
